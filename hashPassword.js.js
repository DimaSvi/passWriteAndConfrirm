const prompt = require('prompt');
const bcrypt = require('bcrypt');

prompt.start();

// –í–∏–∑–Ω–∞—á–∞—î–º–æ, —è–∫—ñ –ø–æ–ª—è –∑–∞–ø–∏—Ç–∞—Ç–∏
const schema = {
  properties: {
    password: {
      description: 'Enter password',
      hidden: true,
      replace: '*',
      required: true
    },
    confirmPassword: {
      description: 'Confirm password',
      hidden: true,
      replace: '*',
      required: true
    }
  }
};

// –ó–∞–ø—É—Å–∫–∞—î–º–æ –∑–∞–ø–∏—Ç –ø–∞—Ä–æ–ª—ñ–≤
prompt.get(schema, async (err, result) => {
  if (err) {
    console.error('Error:', err);
    return;
  }

  const { password, confirmPassword } = result;

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –ø–∞—Ä–æ–ª—ñ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å
  if (password !== confirmPassword) {
    console.error('‚ùå Passwords do not match!');
    return;
  }

  console.log('‚úÖ Passwords match!');

  // –•–µ—à—É—î–º–æ –ø–∞—Ä–æ–ª—å –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é bcrypt
  try {
    const saltRounds = 10;
    const hashedPassword = await bcrypt.hash(password, saltRounds);
    console.log('üîê Hashed Password:', hashedPassword);
  } catch (error) {
    console.error('Error hashing password:', error);
  }
});
